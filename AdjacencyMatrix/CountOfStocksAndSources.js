const n = 5;
const matrix = [
  [0, 0, 0, 0, 0],
  [0, 0, 0, 0, 1],
  [1, 1, 0, 0, 0],
  [0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0],
];

/*
*
Ориентированный граф задан матрицей смежности. Посчитайте количество истоков и стоков.

Стоком называется вершина, из которой не исходит ни одного ребра.

Истоком называется вершина, в которую не входит ни одно ребро.

Входные данные

На вход программы поступает число n (
≤
≤ 100) – количество вершин графа, а затем n строк по n чисел, каждое из которых равно 0 или 1, – его матрица смежности.

Выходные данные

В одной строке выведите 2 числа: количество истоков и стоков.
*
*/

function calculateCountOfStocksAndSources(n, matrix) {
  let inp = [];
  let out = [];

  let source = 0;
  let sink = 0;

  for (let i = 0; i < n; i++) {
    for (let j = 0; j < n; j++) {
      if (a[i][j]) {
        out[i]++; // исходит из узла i
        inp[j]++; // входит в узел j
      }
    }
  }

  for (let i = 0; i < n; i++) {
    if (inp[i] == 0) source++; // вершина, в которую не входит ни одного ребра
    if (out[i] == 0) sink++; // вершина, из которой не исходит ни одного ребра
  }

  return [source, sink];
}

console.log(calculateCountOfStocksAndSources(n, matrix));
